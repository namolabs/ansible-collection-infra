---
#tasks file for infra_proxmox_create_demo_vm
- name: Clone OS Template
  community.general.proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ proxmox_node }}"
    clone: "{{ clone_name }}"
    newid: "{{ vm_id  }}" # Control to the given ID
    name: "{{ vm_name }}"
    full: true
    storage: "{{ vm_storage }}"
  register: state

- name: Resize disk, if needed
  community.general.proxmox_disk:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    vmid: "{{ state.vmid }}"
    disk: "{{ vm_disk_type }}"
    size: "{{ vm_disk_size }}"
    state: "resized"
  when: state.changed

- name: Upload Cloudinit user-data file - debug
  ansible.builtin.copy:
    src: "{{ configfolder }}/{{ vm_name }}-user-data.yml"
    dest: "{{ snippets_path }}/{{ vm_name }}-user-data.yml"
    mode: "0644"
  when: state.changed

- name: Upload Cloudinit network-data file - debug
  ansible.builtin.copy:
    src: "{{ configfolder }}/{{ vm_name }}-network-data.yml"
    dest: "{{ snippets_path }}/{{ vm_name }}-network-data.yml"
    mode: "0644"
  when: state.changed

- name: generate network dictionary for proxmox_kvm
  ansible.builtin.set_fact:
    netdict: "{{ netdict | combine({'net' + ansible_loop.index0 | string:  'virtio=' + item.value.match.macaddress | string + ',bridge=' + item.key | string + ',firewall=0'} )  }}"
  loop: "{{ lookup('dict', vm_item.network.ethernets) }}"
  loop_control:
    extended: true
  vars:
    netdict: {}
#      projectdata: "{{ lookup('file', configfolder + '/projectdata.json') | from_json }}"

- name: Debug- show network dictionary
  debug:
    msg: "VM Network Dictionary: {{ netdict }}"
  when: state.changed

- name: Modify the Cloned VM, adapt a few parameters, attach cloudinit template
  community.general.proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ state.vmid }}"
    name: "{{ vm_name }}"
    cores: "{{ vm_cores | default(2) }}"
    memory: "{{ vm_memory | default(2048) }}"
    net: "{{ netdict }}"
    #      net0: "virtio={{ vm_macaddress }},bridge={{ vm_bridge }},{{ tag_snippet }}firewall={{ fw_enabled }}"
    serial:
      serial0: "socket"
    vga: serial0
    citype: nocloud
    cicustom: "user={{snippets_storage}}:snippets/{{ vm_name }}-user-data.yml,network={{snippets_storage}}:snippets/{{ vm_name }}-network-data.yml"
    agent: "enabled=1"
    update: yes
    update_unsafe: yes
  when: state.changed

- name: Start the VM
  community.general.proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_token_id: "{{ api_token_id }}"
    api_token_secret: "{{ api_token_secret }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ state.vmid }}"
    name: "{{ vm_name }}"
    state: started
  when: state.changed
